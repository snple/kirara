syntax = "proto3";
package slots;

option go_package = "github.com/snple/kirara/pb/slots;slots";

import "source_message.proto";
import "generic_message.proto";

// source
message SourceListRequest {
    pb.Page page = 1;
    // string device_id = 2;
    string tags = 3;
    string type = 4;
    string source = 5;
}

message SourceListResponse {
    pb.Page page = 1;
    uint32 count = 2;
    repeated pb.Source source = 3;
}

message SourceLinkRequest {
    string id = 1;
    sint32 status = 2;
}

message SourcePullRequest {
    int64 after = 1;
    uint32 limit = 2;
    // string device_id = 3;
    string type = 4;
    string source = 5;
}

message SourcePullResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.Source source = 3;
}

service SourceService {
    rpc Create(pb.Source) returns (pb.Source) {}
    rpc Update(pb.Source) returns (pb.Source) {}
    rpc View(pb.Id) returns (pb.Source) {}
    rpc Name(pb.Name) returns (pb.Source) {}
    rpc Delete(pb.Id) returns (pb.MyBool) {}
    rpc List(SourceListRequest) returns (SourceListResponse) {}
    rpc Link(SourceLinkRequest) returns (pb.MyBool) {}
    rpc ViewWithDeleted(pb.Id) returns (pb.Source) {}
    rpc Pull(SourcePullRequest) returns (SourcePullResponse) {}
    rpc Sync(pb.Source) returns (pb.MyBool) {}
}

// tag
message TagListRequest {
    pb.Page page = 1;
    // string device_id = 2;
    string source_id = 3;
    string tags = 4;
    string type = 5;
}

message TagListResponse {
    pb.Page page = 1;
    uint32 count = 2;
    repeated pb.Tag tag = 3;
}

message TagPullRequest {
    int64 after = 1;
    uint32 limit = 2;
    // string device_id = 3;
    string source_id = 4;
    string type = 5;
}

message TagPullResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.Tag tag = 3;
}

message TagPullValueRequest {
    int64 after = 1;
    uint32 limit = 2;
    string device_id = 3;
    string source_id = 4;
}

message TagPullValueResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.TagValueUpdated tag = 3;
}

service TagService {
    rpc Create(pb.Tag) returns (pb.Tag) {}
    rpc Update(pb.Tag) returns (pb.Tag) {}
    rpc View(pb.Id) returns (pb.Tag) {}
    rpc Name(pb.Name) returns (pb.Tag) {}
    rpc Delete(pb.Id) returns (pb.MyBool) {}
    rpc List(TagListRequest) returns (TagListResponse) {}
    rpc ViewWithDeleted(pb.Id) returns (pb.Tag) {}
    rpc Pull(TagPullRequest) returns (TagPullResponse) {}
    rpc Sync(pb.Tag) returns (pb.MyBool) {}
    rpc GetValue(pb.Id) returns (pb.TagValue) {}
    rpc SetValue(pb.TagValue) returns (pb.MyBool) {}
    rpc SetValueForce(pb.TagValue) returns (pb.MyBool) {}
    rpc GetValueByName(pb.Name) returns (pb.TagNameValue) {}
    rpc SetValueByName(pb.TagNameValue) returns (pb.MyBool) {}
    rpc SetValueByNameForce(pb.TagNameValue) returns (pb.MyBool) {}
    rpc ViewValue(pb.Id) returns (pb.TagValueUpdated) {}
    rpc DeleteValue(pb.Id) returns (pb.MyBool) {}
    rpc PullValue(TagPullValueRequest) returns (TagPullValueResponse) {}
    rpc SyncValue(pb.TagValue) returns (pb.MyBool) {}
}
