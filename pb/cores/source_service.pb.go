// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: cores/source_service.proto

package cores

import (
	pb "github.com/snple/kirara/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// source
type SourceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *pb.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	DeviceId string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Tags     string   `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Type     string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Source   string   `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *SourceListRequest) Reset() {
	*x = SourceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceListRequest) ProtoMessage() {}

func (x *SourceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceListRequest.ProtoReflect.Descriptor instead.
func (*SourceListRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{0}
}

func (x *SourceListRequest) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SourceListRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SourceListRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *SourceListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SourceListRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type SourceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *pb.Page     `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Count  uint32       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Source []*pb.Source `protobuf:"bytes,3,rep,name=source,proto3" json:"source,omitempty"`
}

func (x *SourceListResponse) Reset() {
	*x = SourceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceListResponse) ProtoMessage() {}

func (x *SourceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceListResponse.ProtoReflect.Descriptor instead.
func (*SourceListResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{1}
}

func (x *SourceListResponse) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SourceListResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SourceListResponse) GetSource() []*pb.Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type SourceNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SourceNameRequest) Reset() {
	*x = SourceNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceNameRequest) ProtoMessage() {}

func (x *SourceNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceNameRequest.ProtoReflect.Descriptor instead.
func (*SourceNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{2}
}

func (x *SourceNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SourceNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SourceLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32  `protobuf:"zigzag32,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SourceLinkRequest) Reset() {
	*x = SourceLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceLinkRequest) ProtoMessage() {}

func (x *SourceLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceLinkRequest.ProtoReflect.Descriptor instead.
func (*SourceLinkRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{3}
}

func (x *SourceLinkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SourceLinkRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SourceCloneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *SourceCloneRequest) Reset() {
	*x = SourceCloneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceCloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceCloneRequest) ProtoMessage() {}

func (x *SourceCloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceCloneRequest.ProtoReflect.Descriptor instead.
func (*SourceCloneRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{4}
}

func (x *SourceCloneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SourceCloneRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type SourcePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Source   string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *SourcePullRequest) Reset() {
	*x = SourcePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourcePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcePullRequest) ProtoMessage() {}

func (x *SourcePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcePullRequest.ProtoReflect.Descriptor instead.
func (*SourcePullRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{5}
}

func (x *SourcePullRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *SourcePullRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SourcePullRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SourcePullRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SourcePullRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type SourcePullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After  int64        `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit  uint32       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Source []*pb.Source `protobuf:"bytes,3,rep,name=source,proto3" json:"source,omitempty"`
}

func (x *SourcePullResponse) Reset() {
	*x = SourcePullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourcePullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcePullResponse) ProtoMessage() {}

func (x *SourcePullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcePullResponse.ProtoReflect.Descriptor instead.
func (*SourcePullResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{6}
}

func (x *SourcePullResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *SourcePullResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SourcePullResponse) GetSource() []*pb.Source {
	if x != nil {
		return x.Source
	}
	return nil
}

// tag
type TagListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *pb.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	DeviceId string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceId string   `protobuf:"bytes,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Tags     string   `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	Type     string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TagListRequest) Reset() {
	*x = TagListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagListRequest) ProtoMessage() {}

func (x *TagListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagListRequest.ProtoReflect.Descriptor instead.
func (*TagListRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{7}
}

func (x *TagListRequest) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TagListRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagListRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *TagListRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *TagListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type TagListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *pb.Page  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Count uint32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Tag   []*pb.Tag `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagListResponse) Reset() {
	*x = TagListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagListResponse) ProtoMessage() {}

func (x *TagListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagListResponse.ProtoReflect.Descriptor instead.
func (*TagListResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{8}
}

func (x *TagListResponse) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TagListResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TagListResponse) GetTag() []*pb.Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TagNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TagNameRequest) Reset() {
	*x = TagNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagNameRequest) ProtoMessage() {}

func (x *TagNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagNameRequest.ProtoReflect.Descriptor instead.
func (*TagNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{9}
}

func (x *TagNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TagCloneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceId string `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *TagCloneRequest) Reset() {
	*x = TagCloneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagCloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCloneRequest) ProtoMessage() {}

func (x *TagCloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCloneRequest.ProtoReflect.Descriptor instead.
func (*TagCloneRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{10}
}

func (x *TagCloneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TagCloneRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type TagGetValueByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TagGetValueByNameRequest) Reset() {
	*x = TagGetValueByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagGetValueByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagGetValueByNameRequest) ProtoMessage() {}

func (x *TagGetValueByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagGetValueByNameRequest.ProtoReflect.Descriptor instead.
func (*TagGetValueByNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{11}
}

func (x *TagGetValueByNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagGetValueByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TagNameValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Updated  int64  `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *TagNameValue) Reset() {
	*x = TagNameValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagNameValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagNameValue) ProtoMessage() {}

func (x *TagNameValue) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagNameValue.ProtoReflect.Descriptor instead.
func (*TagNameValue) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{12}
}

func (x *TagNameValue) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagNameValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TagNameValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TagNameValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TagNameValue) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type TagPullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceId string `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TagPullRequest) Reset() {
	*x = TagPullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagPullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagPullRequest) ProtoMessage() {}

func (x *TagPullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagPullRequest.ProtoReflect.Descriptor instead.
func (*TagPullRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{13}
}

func (x *TagPullRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *TagPullRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TagPullRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagPullRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *TagPullRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type TagPullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64     `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Tag   []*pb.Tag `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagPullResponse) Reset() {
	*x = TagPullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagPullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagPullResponse) ProtoMessage() {}

func (x *TagPullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagPullResponse.ProtoReflect.Descriptor instead.
func (*TagPullResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{14}
}

func (x *TagPullResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *TagPullResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TagPullResponse) GetTag() []*pb.Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TagPullValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceId string `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *TagPullValueRequest) Reset() {
	*x = TagPullValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagPullValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagPullValueRequest) ProtoMessage() {}

func (x *TagPullValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagPullValueRequest.ProtoReflect.Descriptor instead.
func (*TagPullValueRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{15}
}

func (x *TagPullValueRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *TagPullValueRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TagPullValueRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagPullValueRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type TagPullValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64                 `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32                `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Tag   []*pb.TagValueUpdated `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagPullValueResponse) Reset() {
	*x = TagPullValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagPullValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagPullValueResponse) ProtoMessage() {}

func (x *TagPullValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagPullValueResponse.ProtoReflect.Descriptor instead.
func (*TagPullValueResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{16}
}

func (x *TagPullValueResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *TagPullValueResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TagPullValueResponse) GetTag() []*pb.TagValueUpdated {
	if x != nil {
		return x.Tag
	}
	return nil
}

var File_cores_source_service_proto protoreflect.FileDescriptor

var file_cores_source_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x1a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8e, 0x01, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x6c, 0x0a, 0x12, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x44, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x64, 0x0a, 0x12, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x0f, 0x54, 0x61, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x41, 0x0a, 0x0e, 0x54,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e,
	0x0a, 0x0f, 0x54, 0x61, 0x67, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x18, 0x54, 0x61, 0x67, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x0c, 0x54,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x0e, 0x54, 0x61, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x0f, 0x54, 0x61, 0x67,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x22, 0x7b, 0x0a, 0x13, 0x54, 0x61, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x69, 0x0a, 0x14, 0x54, 0x61, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x03, 0x74, 0x61, 0x67, 0x32, 0x94, 0x04, 0x0a, 0x0d,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x00, 0x12, 0x22, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x1c, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x06, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79,
	0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x12,
	0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6c,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x06, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x20, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c,
	0x22, 0x00, 0x32, 0xa8, 0x07, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x07, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x67, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22, 0x00, 0x12,
	0x1c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x67, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22, 0x00, 0x12, 0x19, 0x0a,
	0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x07, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67,
	0x22, 0x00, 0x12, 0x1f, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x67, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x06, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f,
	0x6c, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x05,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61,
	0x67, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0f, 0x56,
	0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x06,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x1d, 0x0a, 0x04, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x1a, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x26, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42,
	0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x2e, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x09, 0x56,
	0x69, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09,
	0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61,
	0x67, 0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x70, 0x6c,
	0x65, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x72, 0x61, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cores_source_service_proto_rawDescOnce sync.Once
	file_cores_source_service_proto_rawDescData = file_cores_source_service_proto_rawDesc
)

func file_cores_source_service_proto_rawDescGZIP() []byte {
	file_cores_source_service_proto_rawDescOnce.Do(func() {
		file_cores_source_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cores_source_service_proto_rawDescData)
	})
	return file_cores_source_service_proto_rawDescData
}

var file_cores_source_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cores_source_service_proto_goTypes = []interface{}{
	(*SourceListRequest)(nil),        // 0: cores.SourceListRequest
	(*SourceListResponse)(nil),       // 1: cores.SourceListResponse
	(*SourceNameRequest)(nil),        // 2: cores.SourceNameRequest
	(*SourceLinkRequest)(nil),        // 3: cores.SourceLinkRequest
	(*SourceCloneRequest)(nil),       // 4: cores.SourceCloneRequest
	(*SourcePullRequest)(nil),        // 5: cores.SourcePullRequest
	(*SourcePullResponse)(nil),       // 6: cores.SourcePullResponse
	(*TagListRequest)(nil),           // 7: cores.TagListRequest
	(*TagListResponse)(nil),          // 8: cores.TagListResponse
	(*TagNameRequest)(nil),           // 9: cores.TagNameRequest
	(*TagCloneRequest)(nil),          // 10: cores.TagCloneRequest
	(*TagGetValueByNameRequest)(nil), // 11: cores.TagGetValueByNameRequest
	(*TagNameValue)(nil),             // 12: cores.TagNameValue
	(*TagPullRequest)(nil),           // 13: cores.TagPullRequest
	(*TagPullResponse)(nil),          // 14: cores.TagPullResponse
	(*TagPullValueRequest)(nil),      // 15: cores.TagPullValueRequest
	(*TagPullValueResponse)(nil),     // 16: cores.TagPullValueResponse
	(*pb.Page)(nil),                  // 17: pb.Page
	(*pb.Source)(nil),                // 18: pb.Source
	(*pb.Tag)(nil),                   // 19: pb.Tag
	(*pb.TagValueUpdated)(nil),       // 20: pb.TagValueUpdated
	(*pb.Id)(nil),                    // 21: pb.Id
	(*pb.Name)(nil),                  // 22: pb.Name
	(*pb.TagValue)(nil),              // 23: pb.TagValue
	(*pb.MyBool)(nil),                // 24: pb.MyBool
}
var file_cores_source_service_proto_depIdxs = []int32{
	17, // 0: cores.SourceListRequest.page:type_name -> pb.Page
	17, // 1: cores.SourceListResponse.page:type_name -> pb.Page
	18, // 2: cores.SourceListResponse.source:type_name -> pb.Source
	18, // 3: cores.SourcePullResponse.source:type_name -> pb.Source
	17, // 4: cores.TagListRequest.page:type_name -> pb.Page
	17, // 5: cores.TagListResponse.page:type_name -> pb.Page
	19, // 6: cores.TagListResponse.tag:type_name -> pb.Tag
	19, // 7: cores.TagPullResponse.tag:type_name -> pb.Tag
	20, // 8: cores.TagPullValueResponse.tag:type_name -> pb.TagValueUpdated
	18, // 9: cores.SourceService.Create:input_type -> pb.Source
	18, // 10: cores.SourceService.Update:input_type -> pb.Source
	21, // 11: cores.SourceService.View:input_type -> pb.Id
	2,  // 12: cores.SourceService.Name:input_type -> cores.SourceNameRequest
	22, // 13: cores.SourceService.NameFull:input_type -> pb.Name
	21, // 14: cores.SourceService.Delete:input_type -> pb.Id
	0,  // 15: cores.SourceService.List:input_type -> cores.SourceListRequest
	3,  // 16: cores.SourceService.Link:input_type -> cores.SourceLinkRequest
	4,  // 17: cores.SourceService.Clone:input_type -> cores.SourceCloneRequest
	21, // 18: cores.SourceService.ViewWithDeleted:input_type -> pb.Id
	5,  // 19: cores.SourceService.Pull:input_type -> cores.SourcePullRequest
	18, // 20: cores.SourceService.Sync:input_type -> pb.Source
	19, // 21: cores.TagService.Create:input_type -> pb.Tag
	19, // 22: cores.TagService.Update:input_type -> pb.Tag
	21, // 23: cores.TagService.View:input_type -> pb.Id
	9,  // 24: cores.TagService.Name:input_type -> cores.TagNameRequest
	22, // 25: cores.TagService.NameFull:input_type -> pb.Name
	21, // 26: cores.TagService.Delete:input_type -> pb.Id
	7,  // 27: cores.TagService.List:input_type -> cores.TagListRequest
	10, // 28: cores.TagService.Clone:input_type -> cores.TagCloneRequest
	21, // 29: cores.TagService.ViewWithDeleted:input_type -> pb.Id
	13, // 30: cores.TagService.Pull:input_type -> cores.TagPullRequest
	19, // 31: cores.TagService.Sync:input_type -> pb.Tag
	21, // 32: cores.TagService.GetValue:input_type -> pb.Id
	23, // 33: cores.TagService.SetValue:input_type -> pb.TagValue
	23, // 34: cores.TagService.SetValueForce:input_type -> pb.TagValue
	11, // 35: cores.TagService.GetValueByName:input_type -> cores.TagGetValueByNameRequest
	12, // 36: cores.TagService.SetValueByName:input_type -> cores.TagNameValue
	12, // 37: cores.TagService.SetValueByNameForce:input_type -> cores.TagNameValue
	21, // 38: cores.TagService.ViewValue:input_type -> pb.Id
	21, // 39: cores.TagService.DeleteValue:input_type -> pb.Id
	15, // 40: cores.TagService.PullValue:input_type -> cores.TagPullValueRequest
	23, // 41: cores.TagService.SyncValue:input_type -> pb.TagValue
	18, // 42: cores.SourceService.Create:output_type -> pb.Source
	18, // 43: cores.SourceService.Update:output_type -> pb.Source
	18, // 44: cores.SourceService.View:output_type -> pb.Source
	18, // 45: cores.SourceService.Name:output_type -> pb.Source
	18, // 46: cores.SourceService.NameFull:output_type -> pb.Source
	24, // 47: cores.SourceService.Delete:output_type -> pb.MyBool
	1,  // 48: cores.SourceService.List:output_type -> cores.SourceListResponse
	24, // 49: cores.SourceService.Link:output_type -> pb.MyBool
	24, // 50: cores.SourceService.Clone:output_type -> pb.MyBool
	18, // 51: cores.SourceService.ViewWithDeleted:output_type -> pb.Source
	6,  // 52: cores.SourceService.Pull:output_type -> cores.SourcePullResponse
	24, // 53: cores.SourceService.Sync:output_type -> pb.MyBool
	19, // 54: cores.TagService.Create:output_type -> pb.Tag
	19, // 55: cores.TagService.Update:output_type -> pb.Tag
	19, // 56: cores.TagService.View:output_type -> pb.Tag
	19, // 57: cores.TagService.Name:output_type -> pb.Tag
	19, // 58: cores.TagService.NameFull:output_type -> pb.Tag
	24, // 59: cores.TagService.Delete:output_type -> pb.MyBool
	8,  // 60: cores.TagService.List:output_type -> cores.TagListResponse
	24, // 61: cores.TagService.Clone:output_type -> pb.MyBool
	19, // 62: cores.TagService.ViewWithDeleted:output_type -> pb.Tag
	14, // 63: cores.TagService.Pull:output_type -> cores.TagPullResponse
	24, // 64: cores.TagService.Sync:output_type -> pb.MyBool
	23, // 65: cores.TagService.GetValue:output_type -> pb.TagValue
	24, // 66: cores.TagService.SetValue:output_type -> pb.MyBool
	24, // 67: cores.TagService.SetValueForce:output_type -> pb.MyBool
	12, // 68: cores.TagService.GetValueByName:output_type -> cores.TagNameValue
	24, // 69: cores.TagService.SetValueByName:output_type -> pb.MyBool
	24, // 70: cores.TagService.SetValueByNameForce:output_type -> pb.MyBool
	20, // 71: cores.TagService.ViewValue:output_type -> pb.TagValueUpdated
	24, // 72: cores.TagService.DeleteValue:output_type -> pb.MyBool
	16, // 73: cores.TagService.PullValue:output_type -> cores.TagPullValueResponse
	24, // 74: cores.TagService.SyncValue:output_type -> pb.MyBool
	42, // [42:75] is the sub-list for method output_type
	9,  // [9:42] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cores_source_service_proto_init() }
func file_cores_source_service_proto_init() {
	if File_cores_source_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cores_source_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceCloneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourcePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourcePullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagCloneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagGetValueByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagNameValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagPullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagPullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagPullValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagPullValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cores_source_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cores_source_service_proto_goTypes,
		DependencyIndexes: file_cores_source_service_proto_depIdxs,
		MessageInfos:      file_cores_source_service_proto_msgTypes,
	}.Build()
	File_cores_source_service_proto = out.File
	file_cores_source_service_proto_rawDesc = nil
	file_cores_source_service_proto_goTypes = nil
	file_cores_source_service_proto_depIdxs = nil
}
